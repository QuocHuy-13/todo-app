{"version":3,"sources":["redux/actions.js","component/TodoItem.js","component/TodoList.js","component/TodoInput.js","App.js","reportWebVitals.js","redux/states.js","redux/store.js","redux/reducer.js","index.js"],"names":["ADD_TODO","DELETE_TODO","UPDATE_TODO","TodoItem","props","todo","useState","edit","setEdit","name","setname","dispatch","useDispatch","className","type","value","onChange","e","target","onClick","payload","updateTodo","id","todoId","Todolist","todos","useSelector","state","map","TodoInput","setName","placeholder","Math","floor","random","App","TodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","newtodos","action","push","filter","i","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7366fc2.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\n\r\nexport function addTodo(todo) {\r\n    return {\r\n        type:ADD_TODO,\r\n        payload: todo,\r\n    }\r\n}\r\n\r\nexport function deleteTodo(todoId) {\r\n    return {\r\n        type:DELETE_TODO,\r\n        payload: todoId,\r\n    }\r\n}\r\n\r\n\r\nexport function updateTodo(todo) {\r\n    // console.log(todo)\r\n    return {\r\n        type:UPDATE_TODO,\r\n        payload: todo,\r\n    }\r\n}","import React,{useState} from 'react';\r\nimport \"../style/TodoItem.css\"\r\nimport {useDispatch} from \"react-redux\";\r\nimport { deleteTodo, updateTodo } from '../redux/actions';\r\n\r\nconst TodoItem = (props) => {\r\n    const todo = props.todo ;\r\n    const [edit, setEdit] = useState(false);\r\n    const [name, setname] = useState(todo.name);\r\n    const dispatch = useDispatch() ;\r\n    return (\r\n        <div className=\"row mt-16\">\r\n            <div className=\"col col-2\">\r\n                {edit ? <input type=\"text\" className=\"form-control\" value={name} onChange={(e) => setname(e.target.value)}/> : <div>{todo.name}</div>}\r\n            </div>\r\n            <div className=\"col col-2\">\r\n                <button\r\n                    onClick = {() => {\r\n                        dispatch(updateTodo({\r\n                            id: todo.id,\r\n                            name : name,\r\n                        }))\r\n                        setEdit(!edit)\r\n                    }} \r\n                    type=\"button\" \r\n                    className=\"btn-primary mx-5\"\r\n                    >{edit ? <i className=\"fa fa-check-square-o\"></i> : <i className=\"fa fa-pencil\"></i>}\r\n                </button>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"btn-danger mx-5\"\r\n                    onClick = {() => dispatch(deleteTodo(todo.id))}\r\n                    ><i className=\"fa fa-trash\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoItem;\r\n\r\n// import React, { useState } from 'react'\r\n// import { useDispatch } from 'react-redux';\r\n// import { deleteTodo, updateTodo } from '../redux/actions';\r\n\r\n// function TodoItem({ todo }) {\r\n//     const [editable, setEditable] = useState(false)\r\n//     const [name, setName] = useState(todo.name)\r\n//     let dispatch = useDispatch();\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className=\"row mx-2 align-items-center\">\r\n//                 <div>#{todo.id.length > 1 ? todo.id[2] : todo.id}</div>\r\n//                 <div className=\"col\">\r\n//                     {editable ?\r\n//                         <input type=\"text\" className=\"form-control\"\r\n//                             value={name}\r\n//                             onChange={(e) => {\r\n//                                 setName(e.target.value);\r\n//                             }}\r\n\r\n//                         />\r\n//                         :\r\n//                         <h4>{todo.name}</h4>}\r\n//                 </div>\r\n//                 <button className=\"btn btn-primary m-2\"\r\n//                     onClick={() => {\r\n//                         dispatch(updateTodo({\r\n//                             ...todo,\r\n//                             name: name\r\n//                         }))\r\n//                         if(editable) {\r\n//                          setName(todo.name);   \r\n//                         }\r\n//                         setEditable(!editable);\r\n                      \r\n\r\n//                     }}\r\n//                 >{editable?\"Update\":\"Edit\"}</button>\r\n//                 <button className=\"btn btn-danger m-2\"\r\n//                     onClick={() => dispatch(deleteTodo(todo.id))}\r\n//                 >Delete</button>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default TodoItem","import React from 'react';\r\nimport TodoItem from \"./TodoItem\";\r\nimport {useSelector} from \"react-redux\";\r\nimport \"../style/Todolist.css\";\r\n\r\nconst Todolist = () => {\r\n    const todos = useSelector(state => state)\r\n    return (\r\n        <div className=\"todo-list\">\r\n            {todos.map(todo => {\r\n                return <TodoItem key={todo.id} todo={todo}/>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todolist;\r\n\r\n","import React, { useState } from 'react';\r\nimport \"../style/TodoInput.css\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo } from '../redux/actions';\r\n\r\nconst TodoInput = () => {\r\n    let [name, setName] = useState('');\r\n    let dispatch = useDispatch();\r\n    return (\r\n        <div className='todo-form'>\r\n            <input\r\n                value={name}\r\n                onChange={(e)=>setName(e.target.value)}\r\n                placeholder='Add a todo'\r\n                name='text'\r\n                className='todo-input'\r\n            />\r\n            <button\r\n                className='todo-button'\r\n                onClick={()=>{\r\n                       dispatch(  addTodo({\r\n                        id: Math.floor(Math.random() * 100),\r\n                        name: name\r\n                    }));\r\n                        setName('');\r\n                    }}>\r\n                Add todo\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoInput;\r\n\r\n","import './App.css';\nimport TodoList from \"./component/TodoList\";\nimport TodoInput from \"./component/TodoInput\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-todo\">\n        <TodoInput />\n        <TodoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export let todos = [\r\n   \r\n]","import {createStore} from 'redux';\r\nimport {reducer} from './reducer';\r\n\r\nexport let store = createStore(reducer);","import { ADD_TODO, DELETE_TODO, UPDATE_TODO } from \"./actions\"\r\nimport { todos } from \"./states\";\r\n\r\nexport let reducer = (state = todos, action) => {\r\n    let newtodos ;\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            newtodos = [...state];\r\n            newtodos.push(action.payload);\r\n            return newtodos;\r\n        case DELETE_TODO:\r\n            newtodos = [...state];\r\n            newtodos = newtodos.filter(todo => todo.id !== action.payload)\r\n            return newtodos;\r\n        case UPDATE_TODO:\r\n            newtodos = [...state];\r\n            for (let i = 0; i < newtodos.length; i++) {\r\n                if (newtodos[i].id === action.payload.id) {\r\n                    newtodos[i] = action.payload\r\n                }\r\n            }\r\n            // console.log(newtodos)\r\n            return newtodos\r\n    }\r\n    return state;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {store} from \"./redux/store\" ;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}